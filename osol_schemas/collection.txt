-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE kastle_collection.access_log (
  access_id bigint NOT NULL DEFAULT nextval('kastle_collection.access_log_access_id_seq'::regclass),
  user_id character varying NOT NULL,
  resource_type character varying NOT NULL,
  resource_id character varying,
  action character varying NOT NULL,
  access_granted boolean DEFAULT true,
  denial_reason character varying,
  ip_address inet,
  session_id character varying,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT access_log_pkey PRIMARY KEY (access_id)
);
CREATE TABLE kastle_collection.audit_log (
  audit_id bigint NOT NULL DEFAULT nextval('kastle_collection.audit_log_audit_id_seq'::regclass),
  table_name character varying NOT NULL,
  operation character varying CHECK (operation::text = ANY (ARRAY['INSERT'::character varying::text, 'UPDATE'::character varying::text, 'DELETE'::character varying::text])),
  record_id character varying NOT NULL,
  user_id character varying NOT NULL,
  changed_fields jsonb,
  old_values jsonb,
  new_values jsonb,
  ip_address inet,
  user_agent text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT audit_log_pkey PRIMARY KEY (audit_id)
);
CREATE TABLE kastle_collection.collection_audit_trail (
  audit_id integer NOT NULL DEFAULT nextval('kastle_collection.collection_audit_trail_audit_id_seq'::regclass),
  user_id character varying,
  action_type character varying,
  entity_type character varying,
  entity_id character varying,
  old_values jsonb,
  new_values jsonb,
  ip_address character varying,
  user_agent text,
  action_timestamp timestamp with time zone DEFAULT now(),
  CONSTRAINT collection_audit_trail_pkey PRIMARY KEY (audit_id)
);
CREATE TABLE kastle_collection.collection_automation_metrics (
  metric_id integer NOT NULL DEFAULT nextval('kastle_collection.collection_automation_metrics_metric_id_seq'::regclass),
  metric_date date NOT NULL,
  automation_type character varying CHECK (automation_type::text = ANY (ARRAY['AUTO_DIALER'::character varying::text, 'SMS_CAMPAIGN'::character varying::text, 'EMAIL_CAMPAIGN'::character varying::text, 'CHATBOT'::character varying::text, 'IVR'::character varying::text, 'PREDICTIVE_DIALER'::character varying::text, 'AI_SCORING'::character varying::text])),
  total_attempts integer,
  successful_contacts integer,
  payments_collected integer,
  amount_collected numeric,
  cost_saved numeric,
  efficiency_gain numeric,
  error_rate numeric,
  customer_satisfaction_score numeric,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT collection_automation_metrics_pkey PRIMARY KEY (metric_id)
);
CREATE TABLE kastle_collection.collection_benchmarks (
  benchmark_id integer NOT NULL DEFAULT nextval('kastle_collection.collection_benchmarks_benchmark_id_seq'::regclass),
  benchmark_date date NOT NULL,
  benchmark_type character varying,
  metric_name character varying NOT NULL,
  internal_value numeric,
  industry_average numeric,
  best_in_class numeric,
  percentile_rank numeric,
  gap_to_average numeric,
  gap_to_best numeric,
  source character varying,
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT collection_benchmarks_pkey PRIMARY KEY (benchmark_id)
);
CREATE TABLE kastle_collection.collection_bucket_movement (
  movement_id integer NOT NULL DEFAULT nextval('kastle_collection.collection_bucket_movement_movement_id_seq'::regclass),
  case_id integer,
  from_bucket_id integer,
  to_bucket_id integer,
  movement_date date NOT NULL,
  movement_reason character varying,
  days_in_previous_bucket integer,
  amount_at_movement numeric,
  officer_id character varying,
  automated_movement boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT collection_bucket_movement_pkey PRIMARY KEY (movement_id),
  CONSTRAINT collection_bucket_movement_case_id_fkey FOREIGN KEY (case_id) REFERENCES kastle_banking.collection_cases(case_id),
  CONSTRAINT collection_bucket_movement_to_bucket_id_fkey FOREIGN KEY (to_bucket_id) REFERENCES kastle_banking.collection_buckets(bucket_id),
  CONSTRAINT collection_bucket_movement_officer_id_fkey FOREIGN KEY (officer_id) REFERENCES kastle_collection.collection_officers(officer_id),
  CONSTRAINT collection_bucket_movement_from_bucket_id_fkey FOREIGN KEY (from_bucket_id) REFERENCES kastle_banking.collection_buckets(bucket_id)
);
CREATE TABLE kastle_collection.collection_call_records (
  call_id integer NOT NULL DEFAULT nextval('kastle_collection.collection_call_records_call_id_seq'::regclass),
  interaction_id integer,
  phone_number character varying,
  officer_id character varying,
  call_datetime timestamp with time zone,
  call_duration_seconds integer,
  wait_time_seconds integer,
  hold_time_seconds integer,
  call_type character varying,
  call_disposition character varying,
  recording_url character varying,
  ivr_path character varying,
  transfer_count integer,
  quality_monitored boolean DEFAULT false,
  quality_score numeric,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT collection_call_records_pkey PRIMARY KEY (call_id),
  CONSTRAINT collection_call_records_officer_id_fkey FOREIGN KEY (officer_id) REFERENCES kastle_collection.collection_officers(officer_id),
  CONSTRAINT collection_call_records_interaction_id_fkey FOREIGN KEY (interaction_id) REFERENCES kastle_collection.collection_interactions(interaction_id)
);
CREATE TABLE kastle_collection.collection_campaigns (
  campaign_id integer NOT NULL DEFAULT nextval('kastle_collection.collection_campaigns_campaign_id_seq'::regclass),
  campaign_name character varying NOT NULL,
  campaign_type character varying,
  target_bucket integer,
  target_segment character varying,
  start_date date,
  end_date date,
  budget_amount numeric,
  target_recovery numeric,
  actual_recovery numeric,
  total_contacts integer,
  success_rate numeric,
  roi numeric,
  status character varying DEFAULT 'ACTIVE'::character varying,
  created_by character varying,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT collection_campaigns_pkey PRIMARY KEY (campaign_id),
  CONSTRAINT collection_campaigns_target_bucket_fkey FOREIGN KEY (target_bucket) REFERENCES kastle_banking.collection_buckets(bucket_id)
);
CREATE TABLE kastle_collection.collection_case_details (
  case_detail_id integer NOT NULL DEFAULT nextval('kastle_collection.collection_case_details_case_detail_id_seq'::regclass),
  case_id integer,
  delinquency_reason character varying,
  customer_segment character varying,
  risk_score integer,
  collection_strategy character varying,
  skip_trace_status character varying,
  legal_status character varying,
  settlement_offered boolean DEFAULT false,
  settlement_amount numeric,
  restructure_requested boolean DEFAULT false,
  hardship_flag boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT collection_case_details_pkey PRIMARY KEY (case_detail_id),
  CONSTRAINT collection_case_details_case_id_fkey FOREIGN KEY (case_id) REFERENCES kastle_banking.collection_cases(case_id)
);
CREATE TABLE kastle_collection.collection_compliance_violations (
  violation_id integer NOT NULL DEFAULT nextval('kastle_collection.collection_compliance_violations_violation_id_seq'::regclass),
  violation_date date NOT NULL,
  violation_type character varying CHECK (violation_type::text = ANY (ARRAY['SAMA_REGULATION'::character varying::text, 'SHARIA_COMPLIANCE'::character varying::text, 'CUSTOMER_PROTECTION'::character varying::text, 'DATA_PRIVACY'::character varying::text, 'COLLECTION_PRACTICE'::character varying::text, 'DOCUMENTATION'::character varying::text])),
  severity character varying CHECK (severity::text = ANY (ARRAY['LOW'::character varying::text, 'MEDIUM'::character varying::text, 'HIGH'::character varying::text, 'CRITICAL'::character varying::text])),
  officer_id character varying,
  case_id integer,
  description text,
  corrective_action text,
  action_taken boolean DEFAULT false,
  action_date date,
  reviewed_by character varying,
  fine_amount numeric,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT collection_compliance_violations_pkey PRIMARY KEY (violation_id),
  CONSTRAINT collection_compliance_violations_case_id_fkey FOREIGN KEY (case_id) REFERENCES kastle_banking.collection_cases(case_id),
  CONSTRAINT collection_compliance_violations_officer_id_fkey FOREIGN KEY (officer_id) REFERENCES kastle_collection.collection_officers(officer_id)
);
CREATE TABLE kastle_collection.collection_contact_attempts (
  attempt_id integer NOT NULL DEFAULT nextval('kastle_collection.collection_contact_attempts_attempt_id_seq'::regclass),
  case_id integer,
  customer_id character varying,
  contact_type character varying CHECK (contact_type::text = ANY (ARRAY['PRIMARY'::character varying::text, 'SECONDARY'::character varying::text, 'EMERGENCY'::character varying::text, 'WORK'::character varying::text, 'REFERENCE'::character varying::text])),
  contact_number character varying,
  contact_result character varying CHECK (contact_result::text = ANY (ARRAY['CONNECTED'::character varying::text, 'NO_ANSWER'::character varying::text, 'BUSY'::character varying::text, 'WRONG_NUMBER'::character varying::text, 'DISCONNECTED'::character varying::text, 'VOICEMAIL'::character varying::text])),
  attempt_datetime timestamp with time zone,
  officer_id character varying,
  best_time_to_contact character varying,
  contact_quality_score integer,
  is_valid boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  outstanding_amount bigint,
  CONSTRAINT collection_contact_attempts_pkey PRIMARY KEY (attempt_id),
  CONSTRAINT collection_contact_attempts_case_id_fkey FOREIGN KEY (case_id) REFERENCES kastle_banking.collection_cases(case_id),
  CONSTRAINT collection_contact_attempts_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES kastle_banking.customers(customer_id),
  CONSTRAINT collection_contact_attempts_officer_id_fkey FOREIGN KEY (officer_id) REFERENCES kastle_collection.collection_officers(officer_id)
);
CREATE TABLE kastle_collection.collection_customer_segments (
  segment_id integer NOT NULL DEFAULT nextval('kastle_collection.collection_customer_segments_segment_id_seq'::regclass),
  segment_name character varying NOT NULL,
  segment_code character varying UNIQUE,
  segment_criteria jsonb NOT NULL,
  risk_profile character varying,
  collection_strategy character varying,
  target_recovery_rate numeric,
  actual_recovery_rate numeric,
  customers_count integer,
  total_exposure numeric,
  avg_ticket_size numeric,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT collection_customer_segments_pkey PRIMARY KEY (segment_id)
);
CREATE TABLE kastle_collection.collection_forecasts (
  forecast_id integer NOT NULL DEFAULT nextval('kastle_collection.collection_forecasts_forecast_id_seq'::regclass),
  forecast_date date NOT NULL,
  forecast_period character varying CHECK (forecast_period::text = ANY (ARRAY['DAILY'::character varying::text, 'WEEKLY'::character varying::text, 'MONTHLY'::character varying::text, 'QUARTERLY'::character varying::text, 'YEARLY'::character varying::text])),
  forecast_type character varying CHECK (forecast_type::text = ANY (ARRAY['RECOVERY'::character varying::text, 'DEFAULT'::character varying::text, 'ROLL_RATE'::character varying::text, 'PROVISION'::character varying::text, 'WRITE_OFF'::character varying::text])),
  product_id integer,
  bucket_id integer,
  predicted_amount numeric,
  confidence_level numeric,
  lower_bound numeric,
  upper_bound numeric,
  actual_amount numeric,
  variance numeric,
  model_used character varying,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT collection_forecasts_pkey PRIMARY KEY (forecast_id),
  CONSTRAINT collection_forecasts_product_id_fkey FOREIGN KEY (product_id) REFERENCES kastle_banking.products(product_id),
  CONSTRAINT collection_forecasts_bucket_id_fkey FOREIGN KEY (bucket_id) REFERENCES kastle_banking.collection_buckets(bucket_id)
);
CREATE TABLE kastle_collection.collection_interactions (
  interaction_id integer NOT NULL DEFAULT nextval('kastle_collection.collection_interactions_interaction_id_seq'::regclass),
  case_id integer,
  customer_id character varying,
  interaction_type character varying CHECK (interaction_type::text = ANY (ARRAY['CALL'::character varying::text, 'SMS'::character varying::text, 'EMAIL'::character varying::text, 'LETTER'::character varying::text, 'VISIT'::character varying::text, 'LEGAL_NOTICE'::character varying::text, 'WHATSAPP'::character varying::text, 'IVR'::character varying::text])),
  interaction_direction character varying CHECK (interaction_direction::text = ANY (ARRAY['INBOUND'::character varying::text, 'OUTBOUND'::character varying::text])),
  officer_id character varying,
  contact_number character varying,
  interaction_status character varying,
  duration_seconds integer,
  outcome character varying,
  promise_to_pay boolean DEFAULT false,
  ptp_amount numeric,
  ptp_date date,
  notes text,
  recording_reference character varying,
  interaction_datetime timestamp with time zone DEFAULT now(),
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT collection_interactions_pkey PRIMARY KEY (interaction_id),
  CONSTRAINT collection_interactions_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES kastle_banking.customers(customer_id),
  CONSTRAINT collection_interactions_officer_id_fkey FOREIGN KEY (officer_id) REFERENCES kastle_collection.collection_officers(officer_id),
  CONSTRAINT collection_interactions_case_id_fkey FOREIGN KEY (case_id) REFERENCES kastle_banking.collection_cases(case_id)
);
CREATE TABLE kastle_collection.collection_officers (
  officer_id character varying NOT NULL,
  employee_id character varying,
  officer_name character varying NOT NULL,
  team_id integer,
  officer_type character varying CHECK (officer_type::text = ANY (ARRAY['CALL_AGENT'::character varying::text, 'FIELD_AGENT'::character varying::text, 'LEGAL_OFFICER'::character varying::text, 'SENIOR_COLLECTOR'::character varying::text, 'TEAM_LEAD'::character varying::text])),
  contact_number character varying,
  email character varying,
  language_skills character varying,
  collection_limit numeric,
  commission_rate numeric,
  status character varying DEFAULT 'ACTIVE'::character varying,
  joining_date date,
  last_active timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT collection_officers_pkey PRIMARY KEY (officer_id),
  CONSTRAINT collection_officers_team_id_fkey FOREIGN KEY (team_id) REFERENCES kastle_collection.collection_teams(team_id)
);
CREATE TABLE kastle_collection.collection_provisions (
  provision_id integer NOT NULL DEFAULT nextval('kastle_collection.collection_provisions_provision_id_seq'::regclass),
  provision_date date NOT NULL,
  bucket_id integer,
  provision_rate numeric NOT NULL,
  total_exposure numeric,
  provision_amount numeric NOT NULL,
  ifrs9_stage character varying CHECK (ifrs9_stage::text = ANY (ARRAY['STAGE1'::character varying::text, 'STAGE2'::character varying::text, 'STAGE3'::character varying::text])),
  ecl_amount numeric,
  regulatory_provision numeric,
  additional_provision numeric,
  provision_coverage_ratio numeric,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT collection_provisions_pkey PRIMARY KEY (provision_id),
  CONSTRAINT collection_provisions_bucket_id_fkey FOREIGN KEY (bucket_id) REFERENCES kastle_banking.collection_buckets(bucket_id)
);
CREATE TABLE kastle_collection.collection_queue_management (
  queue_id integer NOT NULL DEFAULT nextval('kastle_collection.collection_queue_management_queue_id_seq'::regclass),
  queue_name character varying NOT NULL,
  queue_type character varying CHECK (queue_type::text = ANY (ARRAY['PRIORITY'::character varying::text, 'NORMAL'::character varying::text, 'AUTOMATED'::character varying::text, 'MANUAL'::character varying::text])),
  priority_level integer,
  filter_criteria jsonb,
  assigned_officer_id character varying,
  assigned_team_id integer,
  cases_count integer DEFAULT 0,
  total_amount numeric DEFAULT 0,
  avg_dpd integer,
  last_refreshed timestamp with time zone,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT collection_queue_management_pkey PRIMARY KEY (queue_id),
  CONSTRAINT collection_queue_management_team_id_fkey FOREIGN KEY (assigned_team_id) REFERENCES kastle_collection.collection_teams(team_id),
  CONSTRAINT collection_queue_management_officer_id_fkey FOREIGN KEY (assigned_officer_id) REFERENCES kastle_collection.collection_officers(officer_id)
);
CREATE TABLE kastle_collection.collection_risk_assessment (
  assessment_id integer NOT NULL DEFAULT nextval('kastle_collection.collection_risk_assessment_assessment_id_seq'::regclass),
  customer_id character varying,
  case_id integer,
  assessment_date date NOT NULL,
  risk_category character varying CHECK (risk_category::text = ANY (ARRAY['LOW'::character varying::text, 'MEDIUM'::character varying::text, 'HIGH'::character varying::text, 'CRITICAL'::character varying::text])),
  default_probability numeric,
  loss_given_default numeric,
  expected_loss numeric,
  early_warning_flags jsonb,
  behavioral_score integer,
  payment_pattern_score integer,
  external_risk_factors jsonb,
  recommended_strategy character varying,
  next_review_date date,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT collection_risk_assessment_pkey PRIMARY KEY (assessment_id),
  CONSTRAINT collection_risk_assessment_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES kastle_banking.customers(customer_id),
  CONSTRAINT collection_risk_assessment_case_id_fkey FOREIGN KEY (case_id) REFERENCES kastle_banking.collection_cases(case_id)
);
CREATE TABLE kastle_collection.collection_scores (
  score_id integer NOT NULL DEFAULT nextval('kastle_collection.collection_scores_score_id_seq'::regclass),
  customer_id character varying,
  score_date date NOT NULL,
  payment_behavior_score integer,
  contact_score integer,
  response_score integer,
  risk_score integer,
  recovery_probability numeric,
  recommended_action character varying,
  score_factors jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT collection_scores_pkey PRIMARY KEY (score_id),
  CONSTRAINT collection_scores_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES kastle_banking.customers(customer_id)
);
CREATE TABLE kastle_collection.collection_settlement_offers (
  offer_id integer NOT NULL DEFAULT nextval('kastle_collection.collection_settlement_offers_offer_id_seq'::regclass),
  case_id integer,
  customer_id character varying,
  offer_date date NOT NULL,
  original_amount numeric NOT NULL,
  settlement_amount numeric NOT NULL,
  discount_percentage numeric,
  payment_terms character varying,
  installments integer,
  offer_valid_until date,
  offer_status character varying CHECK (offer_status::text = ANY (ARRAY['PENDING'::character varying::text, 'ACCEPTED'::character varying::text, 'REJECTED'::character varying::text, 'EXPIRED'::character varying::text, 'WITHDRAWN'::character varying::text])),
  approval_level character varying,
  approved_by character varying,
  customer_response character varying,
  response_date date,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT collection_settlement_offers_pkey PRIMARY KEY (offer_id),
  CONSTRAINT collection_settlement_offers_case_id_fkey FOREIGN KEY (case_id) REFERENCES kastle_banking.collection_cases(case_id),
  CONSTRAINT collection_settlement_offers_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES kastle_banking.customers(customer_id)
);
CREATE TABLE kastle_collection.collection_strategies (
  strategy_id integer NOT NULL DEFAULT nextval('kastle_collection.collection_strategies_strategy_id_seq'::regclass),
  strategy_code character varying NOT NULL UNIQUE,
  strategy_name character varying NOT NULL,
  bucket_id integer,
  customer_segment character varying,
  risk_category character varying,
  min_amount numeric,
  max_amount numeric,
  actions jsonb NOT NULL,
  escalation_days integer,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT collection_strategies_pkey PRIMARY KEY (strategy_id),
  CONSTRAINT collection_strategies_bucket_id_fkey FOREIGN KEY (bucket_id) REFERENCES kastle_banking.collection_buckets(bucket_id)
);
CREATE TABLE kastle_collection.collection_system_performance (
  log_id integer NOT NULL DEFAULT nextval('kastle_collection.collection_system_performance_log_id_seq'::regclass),
  log_timestamp timestamp with time zone DEFAULT now(),
  system_component character varying,
  response_time_ms integer,
  cpu_usage_percent numeric,
  memory_usage_percent numeric,
  active_users integer,
  error_count integer,
  warning_count integer,
  api_calls integer,
  database_connections integer,
  CONSTRAINT collection_system_performance_pkey PRIMARY KEY (log_id)
);
CREATE TABLE kastle_collection.collection_teams (
  team_id integer NOT NULL DEFAULT nextval('kastle_collection.collection_teams_team_id_seq'::regclass),
  team_code character varying NOT NULL UNIQUE,
  team_name character varying NOT NULL,
  team_type character varying CHECK (team_type::text = ANY (ARRAY['CALL_CENTER'::character varying::text, 'FIELD'::character varying::text, 'LEGAL'::character varying::text, 'DIGITAL'::character varying::text, 'RECOVERY'::character varying::text])),
  branch_id character varying,
  manager_id character varying,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT collection_teams_pkey PRIMARY KEY (team_id),
  CONSTRAINT collection_teams_branch_id_fkey FOREIGN KEY (branch_id) REFERENCES kastle_banking.branches(branch_id)
);
CREATE TABLE kastle_collection.collection_vintage_analysis (
  vintage_id integer NOT NULL DEFAULT nextval('kastle_collection.collection_vintage_analysis_vintage_id_seq'::regclass),
  origination_month character varying NOT NULL,
  product_id integer,
  months_on_book integer NOT NULL,
  original_accounts integer,
  original_amount numeric,
  current_outstanding numeric,
  dpd_0_30_count integer,
  dpd_31_60_count integer,
  dpd_61_90_count integer,
  dpd_90_plus_count integer,
  written_off_count integer,
  written_off_amount numeric,
  recovery_amount numeric,
  flow_rate_30 numeric,
  flow_rate_60 numeric,
  flow_rate_90 numeric,
  loss_rate numeric,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT collection_vintage_analysis_pkey PRIMARY KEY (vintage_id),
  CONSTRAINT collection_vintage_analysis_product_id_fkey FOREIGN KEY (product_id) REFERENCES kastle_banking.products(product_id)
);
CREATE TABLE kastle_collection.collection_workflow_templates (
  template_id integer NOT NULL DEFAULT nextval('kastle_collection.collection_workflow_templates_template_id_seq'::regclass),
  template_name character varying NOT NULL,
  workflow_type character varying,
  bucket_id integer,
  customer_segment character varying,
  workflow_steps jsonb NOT NULL,
  escalation_matrix jsonb,
  sla_hours integer,
  is_automated boolean DEFAULT false,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT collection_workflow_templates_pkey PRIMARY KEY (template_id),
  CONSTRAINT collection_workflow_templates_bucket_id_fkey FOREIGN KEY (bucket_id) REFERENCES kastle_banking.collection_buckets(bucket_id)
);
CREATE TABLE kastle_collection.collection_write_offs (
  write_off_id integer NOT NULL DEFAULT nextval('kastle_collection.collection_write_offs_write_off_id_seq'::regclass),
  case_id integer,
  account_number character varying,
  customer_id character varying,
  write_off_date date NOT NULL,
  write_off_amount numeric NOT NULL,
  principal_amount numeric,
  interest_amount numeric,
  penalty_amount numeric,
  write_off_reason character varying,
  approval_level character varying,
  approved_by character varying,
  recovery_attempts integer,
  last_payment_date date,
  documentation jsonb,
  is_recoverable boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT collection_write_offs_pkey PRIMARY KEY (write_off_id),
  CONSTRAINT collection_write_offs_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES kastle_banking.customers(customer_id),
  CONSTRAINT collection_write_offs_case_id_fkey FOREIGN KEY (case_id) REFERENCES kastle_banking.collection_cases(case_id)
);
CREATE TABLE kastle_collection.daily_collection_summary (
  summary_id integer NOT NULL DEFAULT nextval('kastle_collection.daily_collection_summary_summary_id_seq'::regclass),
  summary_date date NOT NULL,
  branch_id character varying,
  team_id integer,
  total_due_amount numeric,
  total_collected numeric,
  collection_rate numeric,
  accounts_due integer,
  accounts_collected integer,
  calls_made integer,
  contacts_successful integer,
  ptps_obtained integer,
  ptps_kept integer,
  field_visits_done integer,
  legal_notices_sent integer,
  digital_payments integer,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT daily_collection_summary_pkey PRIMARY KEY (summary_id),
  CONSTRAINT daily_collection_summary_team_id_fkey FOREIGN KEY (team_id) REFERENCES kastle_collection.collection_teams(team_id),
  CONSTRAINT daily_collection_summary_branch_id_fkey FOREIGN KEY (branch_id) REFERENCES kastle_banking.branches(branch_id)
);
CREATE TABLE kastle_collection.data_masking_rules (
  rule_id integer NOT NULL DEFAULT nextval('kastle_collection.data_masking_rules_rule_id_seq'::regclass),
  table_name character varying NOT NULL,
  column_name character varying NOT NULL,
  masking_type character varying CHECK (masking_type::text = ANY (ARRAY['PARTIAL'::character varying::text, 'FULL'::character varying::text, 'HASH'::character varying::text, 'RANDOM'::character varying::text])),
  masking_pattern character varying,
  role_exceptions ARRAY,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT data_masking_rules_pkey PRIMARY KEY (rule_id)
);
CREATE TABLE kastle_collection.digital_collection_attempts (
  attempt_id integer NOT NULL DEFAULT nextval('kastle_collection.digital_collection_attempts_attempt_id_seq'::regclass),
  case_id integer,
  customer_id character varying,
  channel_type character varying CHECK (channel_type::text = ANY (ARRAY['IVR'::character varying::text, 'SMS'::character varying::text, 'EMAIL'::character varying::text, 'WHATSAPP'::character varying::text, 'MOBILE_APP'::character varying::text, 'WEB_PORTAL'::character varying::text, 'CHATBOT'::character varying::text])),
  campaign_id integer,
  message_template character varying,
  sent_datetime timestamp with time zone,
  delivered_datetime timestamp with time zone,
  read_datetime timestamp with time zone,
  response_datetime timestamp with time zone,
  response_type character varying,
  payment_made boolean DEFAULT false,
  payment_amount numeric,
  click_through_rate numeric,
  cost_per_message numeric,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT digital_collection_attempts_pkey PRIMARY KEY (attempt_id),
  CONSTRAINT digital_collection_attempts_case_id_fkey FOREIGN KEY (case_id) REFERENCES kastle_banking.collection_cases(case_id),
  CONSTRAINT digital_collection_attempts_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES kastle_banking.customers(customer_id)
);
CREATE TABLE kastle_collection.field_visits (
  visit_id integer NOT NULL DEFAULT nextval('kastle_collection.field_visits_visit_id_seq'::regclass),
  case_id integer,
  customer_id character varying,
  officer_id character varying,
  visit_date date NOT NULL,
  scheduled_time time without time zone,
  actual_time time without time zone,
  visit_address text,
  visit_status character varying CHECK (visit_status::text = ANY (ARRAY['SCHEDULED'::character varying::text, 'COMPLETED'::character varying::text, 'CUSTOMER_NOT_AVAILABLE'::character varying::text, 'WRONG_ADDRESS'::character varying::text, 'REFUSED'::character varying::text, 'CANCELLED'::character varying::text])),
  customer_met character varying,
  amount_collected numeric,
  collection_mode character varying,
  receipt_number character varying,
  customer_behavior character varying,
  follow_up_required boolean DEFAULT false,
  geo_location point,
  distance_traveled numeric,
  expenses_claimed numeric,
  safety_concern boolean DEFAULT false,
  notes text,
  photo_references jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT field_visits_pkey PRIMARY KEY (visit_id),
  CONSTRAINT field_visits_case_id_fkey FOREIGN KEY (case_id) REFERENCES kastle_banking.collection_cases(case_id),
  CONSTRAINT field_visits_officer_id_fkey FOREIGN KEY (officer_id) REFERENCES kastle_collection.collection_officers(officer_id),
  CONSTRAINT field_visits_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES kastle_banking.customers(customer_id)
);
CREATE TABLE kastle_collection.hardship_applications (
  application_id integer NOT NULL DEFAULT nextval('kastle_collection.hardship_applications_application_id_seq'::regclass),
  customer_id character varying,
  case_id integer,
  hardship_type character varying CHECK (hardship_type::text = ANY (ARRAY['JOB_LOSS'::character varying::text, 'MEDICAL'::character varying::text, 'BUSINESS_CLOSURE'::character varying::text, 'SALARY_REDUCTION'::character varying::text, 'COVID_IMPACT'::character varying::text, 'NATURAL_DISASTER'::character varying::text, 'DEATH_IN_FAMILY'::character varying::text])),
  application_date date,
  supporting_documents jsonb,
  requested_relief character varying,
  review_status character varying,
  approved_by character varying,
  approval_date date,
  relief_granted character varying,
  relief_start_date date,
  relief_end_date date,
  monitoring_required boolean DEFAULT true,
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT hardship_applications_pkey PRIMARY KEY (application_id),
  CONSTRAINT hardship_applications_case_id_fkey FOREIGN KEY (case_id) REFERENCES kastle_banking.collection_cases(case_id),
  CONSTRAINT hardship_applications_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES kastle_banking.customers(customer_id)
);
CREATE TABLE kastle_collection.ivr_payment_attempts (
  attempt_id integer NOT NULL DEFAULT nextval('kastle_collection.ivr_payment_attempts_attempt_id_seq'::regclass),
  customer_id character varying,
  account_number character varying,
  call_datetime timestamp with time zone,
  ivr_menu_path character varying,
  payment_amount numeric,
  payment_method character varying,
  transaction_status character varying,
  failure_reason character varying,
  transaction_reference character varying,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT ivr_payment_attempts_pkey PRIMARY KEY (attempt_id),
  CONSTRAINT ivr_payment_attempts_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES kastle_banking.customers(customer_id)
);
CREATE TABLE kastle_collection.legal_cases (
  legal_case_id integer NOT NULL DEFAULT nextval('kastle_collection.legal_cases_legal_case_id_seq'::regclass),
  case_id integer,
  case_number character varying UNIQUE,
  court_name character varying,
  case_type character varying,
  filing_date date,
  lawyer_name character varying,
  lawyer_firm character varying,
  current_stage character varying,
  next_hearing_date date,
  judgment_date date,
  judgment_amount numeric,
  execution_status character varying,
  legal_costs numeric,
  recovered_amount numeric,
  case_status character varying DEFAULT 'ACTIVE'::character varying,
  documents jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT legal_cases_pkey PRIMARY KEY (legal_case_id),
  CONSTRAINT legal_cases_case_id_fkey FOREIGN KEY (case_id) REFERENCES kastle_banking.collection_cases(case_id)
);
CREATE TABLE kastle_collection.loan_restructuring (
  restructure_id integer NOT NULL DEFAULT nextval('kastle_collection.loan_restructuring_restructure_id_seq'::regclass),
  loan_account_number character varying,
  customer_id character varying,
  original_loan_amount numeric,
  outstanding_amount numeric,
  original_tenure integer,
  remaining_tenure integer,
  original_interest_rate numeric,
  new_interest_rate numeric,
  new_tenure integer,
  new_emi numeric,
  moratorium_months integer,
  restructure_date date,
  restructure_reason character varying,
  approval_level character varying,
  impact_on_provision numeric,
  status character varying DEFAULT 'ACTIVE'::character varying,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT loan_restructuring_pkey PRIMARY KEY (restructure_id),
  CONSTRAINT loan_restructuring_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES kastle_banking.customers(customer_id)
);
CREATE TABLE kastle_collection.officer_performance_metrics (
  metric_id integer NOT NULL DEFAULT nextval('kastle_collection.officer_performance_metrics_metric_id_seq'::regclass),
  officer_id character varying,
  metric_date date NOT NULL,
  accounts_assigned integer,
  accounts_worked integer,
  calls_made integer,
  talk_time_minutes integer,
  contacts_successful integer,
  amount_collected numeric,
  ptps_obtained integer,
  ptps_kept_rate numeric,
  average_collection_days numeric,
  customer_complaints integer,
  quality_score numeric,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT officer_performance_metrics_pkey PRIMARY KEY (metric_id),
  CONSTRAINT officer_performance_metrics_officer_id_fkey FOREIGN KEY (officer_id) REFERENCES kastle_collection.collection_officers(officer_id)
);
CREATE TABLE kastle_collection.performance_metrics (
  metric_id bigint NOT NULL DEFAULT nextval('kastle_collection.performance_metrics_metric_id_seq'::regclass),
  metric_name character varying NOT NULL,
  metric_value numeric NOT NULL,
  metric_unit character varying,
  metric_timestamp timestamp with time zone DEFAULT now(),
  additional_info jsonb,
  CONSTRAINT performance_metrics_pkey PRIMARY KEY (metric_id)
);
CREATE TABLE kastle_collection.promise_to_pay (
  ptp_id integer NOT NULL DEFAULT nextval('kastle_collection.promise_to_pay_ptp_id_seq'::regclass),
  case_id integer,
  customer_id character varying,
  interaction_id integer,
  ptp_amount numeric NOT NULL,
  ptp_date date NOT NULL,
  ptp_type character varying CHECK (ptp_type::text = ANY (ARRAY['FULL'::character varying::text, 'PARTIAL'::character varying::text, 'INSTALLMENT'::character varying::text])),
  installment_count integer,
  officer_id character varying,
  status character varying DEFAULT 'ACTIVE'::character varying CHECK (status::text = ANY (ARRAY['ACTIVE'::character varying::text, 'KEPT'::character varying::text, 'BROKEN'::character varying::text, 'PARTIAL_KEPT'::character varying::text, 'CANCELLED'::character varying::text])),
  amount_received numeric DEFAULT 0,
  kept_date date,
  broken_reason character varying,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT promise_to_pay_pkey PRIMARY KEY (ptp_id),
  CONSTRAINT promise_to_pay_officer_id_fkey FOREIGN KEY (officer_id) REFERENCES kastle_collection.collection_officers(officer_id),
  CONSTRAINT promise_to_pay_case_id_fkey FOREIGN KEY (case_id) REFERENCES kastle_banking.collection_cases(case_id),
  CONSTRAINT promise_to_pay_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES kastle_banking.customers(customer_id),
  CONSTRAINT promise_to_pay_interaction_id_fkey FOREIGN KEY (interaction_id) REFERENCES kastle_collection.collection_interactions(interaction_id)
);
CREATE TABLE kastle_collection.repossessed_assets (
  asset_id integer NOT NULL DEFAULT nextval('kastle_collection.repossessed_assets_asset_id_seq'::regclass),
  case_id integer,
  asset_type character varying CHECK (asset_type::text = ANY (ARRAY['VEHICLE'::character varying::text, 'PROPERTY'::character varying::text, 'EQUIPMENT'::character varying::text, 'OTHERS'::character varying::text])),
  asset_description text,
  repossession_date date,
  storage_location character varying,
  estimated_value numeric,
  valuation_date date,
  valuation_agency character varying,
  auction_date date,
  sale_amount numeric,
  buyer_details jsonb,
  storage_costs numeric,
  legal_costs numeric,
  net_recovery numeric,
  asset_condition character varying,
  documents jsonb,
  photos jsonb,
  status character varying DEFAULT 'IN_POSSESSION'::character varying,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT repossessed_assets_pkey PRIMARY KEY (asset_id),
  CONSTRAINT repossessed_assets_case_id_fkey FOREIGN KEY (case_id) REFERENCES kastle_banking.collection_cases(case_id)
);
CREATE TABLE kastle_collection.sharia_compliance_log (
  compliance_id integer NOT NULL DEFAULT nextval('kastle_collection.sharia_compliance_log_compliance_id_seq'::regclass),
  case_id integer,
  compliance_type character varying,
  late_payment_charges numeric,
  charity_amount numeric,
  charity_name character varying,
  distribution_date date,
  distribution_receipt character varying,
  compliance_status character varying,
  reviewed_by character varying,
  review_date date,
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT sharia_compliance_log_pkey PRIMARY KEY (compliance_id),
  CONSTRAINT sharia_compliance_log_case_id_fkey FOREIGN KEY (case_id) REFERENCES kastle_banking.collection_cases(case_id)
);
CREATE TABLE kastle_collection.user_role_assignments (
  assignment_id integer NOT NULL DEFAULT nextval('kastle_collection.user_role_assignments_assignment_id_seq'::regclass),
  user_id character varying NOT NULL,
  role_id integer NOT NULL,
  assigned_by character varying,
  valid_from timestamp with time zone DEFAULT now(),
  valid_until timestamp with time zone,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_role_assignments_pkey PRIMARY KEY (assignment_id),
  CONSTRAINT user_role_assignments_role_id_fkey FOREIGN KEY (role_id) REFERENCES kastle_collection.user_roles(role_id)
);
CREATE TABLE kastle_collection.user_roles (
  role_id integer NOT NULL DEFAULT nextval('kastle_collection.user_roles_role_id_seq'::regclass),
  role_name character varying NOT NULL UNIQUE,
  role_description text,
  permissions jsonb NOT NULL DEFAULT '{}'::jsonb,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_roles_pkey PRIMARY KEY (role_id)
);