-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE kastle_banking.account_types (
  type_id integer NOT NULL DEFAULT nextval('kastle_banking.account_types_type_id_seq'::regclass),
  type_code character varying NOT NULL UNIQUE,
  type_name character varying NOT NULL,
  account_category character varying CHECK (account_category::text = ANY (ARRAY['SAVINGS'::character varying::text, 'CURRENT'::character varying::text, 'FIXED_DEPOSIT'::character varying::text, 'RECURRING_DEPOSIT'::character varying::text, 'LOAN'::character varying::text])),
  description text,
  CONSTRAINT account_types_pkey PRIMARY KEY (type_id)
);
CREATE TABLE kastle_banking.accounts (
  account_id integer NOT NULL DEFAULT nextval('kastle_banking.accounts_account_id_seq'::regclass),
  account_number character varying NOT NULL UNIQUE,
  customer_id character varying,
  account_type_id integer,
  product_id integer,
  branch_id character varying,
  currency_code character varying DEFAULT 'SAR'::character varying,
  account_status character varying CHECK (account_status::text = ANY (ARRAY['ACTIVE'::character varying::text, 'DORMANT'::character varying::text, 'FROZEN'::character varying::text, 'CLOSED'::character varying::text, 'BLOCKED'::character varying::text])),
  opening_date date DEFAULT CURRENT_DATE,
  closing_date date,
  current_balance numeric DEFAULT 0,
  available_balance numeric DEFAULT 0,
  hold_amount numeric DEFAULT 0,
  unclear_balance numeric DEFAULT 0,
  minimum_balance numeric DEFAULT 0,
  overdraft_limit numeric DEFAULT 0,
  interest_rate numeric,
  last_transaction_date timestamp with time zone,
  maturity_date date,
  joint_holder_ids jsonb,
  nominee_details jsonb,
  is_salary_account boolean DEFAULT false,
  is_minor_account boolean DEFAULT false,
  guardian_id character varying,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT accounts_pkey PRIMARY KEY (account_id),
  CONSTRAINT accounts_product_id_fkey FOREIGN KEY (product_id) REFERENCES kastle_banking.products(product_id),
  CONSTRAINT accounts_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES kastle_banking.customers(customer_id),
  CONSTRAINT accounts_branch_id_fkey FOREIGN KEY (branch_id) REFERENCES kastle_banking.branches(branch_id),
  CONSTRAINT accounts_account_type_id_fkey FOREIGN KEY (account_type_id) REFERENCES kastle_banking.account_types(type_id),
  CONSTRAINT accounts_currency_code_fkey FOREIGN KEY (currency_code) REFERENCES kastle_banking.currencies(currency_code)
);
CREATE TABLE kastle_banking.aging_buckets (
  id integer NOT NULL DEFAULT nextval('kastle_banking.aging_buckets_id_seq'::regclass),
  bucket_name character varying NOT NULL,
  min_days integer NOT NULL,
  max_days integer,
  display_order integer NOT NULL,
  color_code character varying,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT aging_buckets_pkey PRIMARY KEY (id)
);
CREATE TABLE kastle_banking.audit_trail (
  audit_id bigint NOT NULL DEFAULT nextval('kastle_banking.audit_trail_audit_id_seq'::regclass),
  table_name character varying NOT NULL,
  record_id character varying,
  action character varying CHECK (action::text = ANY (ARRAY['INSERT'::character varying::text, 'UPDATE'::character varying::text, 'DELETE'::character varying::text, 'SELECT'::character varying::text])),
  user_id character varying,
  auth_user_id uuid,
  user_ip character varying,
  old_values jsonb,
  new_values jsonb,
  action_timestamp timestamp with time zone DEFAULT now(),
  session_id character varying,
  remarks text,
  CONSTRAINT audit_trail_pkey PRIMARY KEY (audit_id)
);
CREATE TABLE kastle_banking.auth_user_profiles (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  auth_user_id uuid,
  bank_user_id character varying UNIQUE,
  customer_id character varying,
  user_type character varying CHECK (user_type::text = ANY (ARRAY['CUSTOMER'::character varying::text, 'EMPLOYEE'::character varying::text, 'ADMIN'::character varying::text])),
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT auth_user_profiles_pkey PRIMARY KEY (id),
  CONSTRAINT auth_user_profiles_auth_user_id_fkey FOREIGN KEY (auth_user_id) REFERENCES auth.users(id)
);
CREATE TABLE kastle_banking.bank_config (
  config_id integer NOT NULL DEFAULT nextval('kastle_banking.bank_config_config_id_seq'::regclass),
  bank_code character varying NOT NULL UNIQUE,
  bank_name character varying NOT NULL,
  head_office_address text,
  swift_code character varying,
  routing_number character varying,
  regulatory_license character varying,
  fiscal_year_start date,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT bank_config_pkey PRIMARY KEY (config_id)
);
CREATE TABLE kastle_banking.branch_collection_performance (
  id integer NOT NULL DEFAULT nextval('kastle_banking.branch_collection_performance_id_seq'::regclass),
  branch_id character varying,
  period_date date NOT NULL,
  total_delinquent_amount numeric NOT NULL,
  total_collected_amount numeric NOT NULL,
  collection_rate numeric NOT NULL,
  number_of_accounts integer NOT NULL,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT branch_collection_performance_pkey PRIMARY KEY (id),
  CONSTRAINT branch_collection_performance_branch_id_fkey FOREIGN KEY (branch_id) REFERENCES kastle_banking.branches(branch_id)
);
CREATE TABLE kastle_banking.branches (
  branch_id character varying NOT NULL,
  branch_name character varying NOT NULL,
  branch_type character varying CHECK (branch_type::text = ANY (ARRAY['HEAD_OFFICE'::character varying::text, 'MAIN'::character varying::text, 'SUB'::character varying::text, 'RURAL'::character varying::text, 'URBAN'::character varying::text])),
  address text,
  city character varying,
  state character varying,
  country_code character varying,
  postal_code character varying,
  phone character varying,
  email character varying,
  manager_id character varying,
  opening_date date,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT branches_pkey PRIMARY KEY (branch_id),
  CONSTRAINT branches_country_code_fkey FOREIGN KEY (country_code) REFERENCES kastle_banking.countries(country_code)
);
CREATE TABLE kastle_banking.collection_buckets (
  bucket_id integer NOT NULL DEFAULT nextval('kastle_banking.collection_buckets_bucket_id_seq'::regclass),
  bucket_code character varying NOT NULL UNIQUE,
  bucket_name character varying NOT NULL,
  min_dpd integer NOT NULL,
  max_dpd integer NOT NULL,
  priority_level integer NOT NULL,
  collection_strategy character varying,
  description text,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT collection_buckets_pkey PRIMARY KEY (bucket_id)
);
CREATE TABLE kastle_banking.collection_cases (
  case_id integer NOT NULL DEFAULT nextval('kastle_banking.collection_cases_case_id_seq'::regclass),
  case_number character varying NOT NULL DEFAULT ((('COLL'::text || to_char(now(), 'YYYYMMDD'::text)) || '_'::text) || substr(md5((random())::text), 1, 8)) UNIQUE,
  customer_id character varying,
  account_number character varying,
  account_type character varying CHECK (account_type::text = ANY (ARRAY['LOAN'::character varying::text, 'CREDIT_CARD'::character varying::text, 'OVERDRAFT'::character varying::text, 'OTHER'::character varying::text])),
  loan_account_number character varying,
  card_number character varying,
  bucket_id integer,
  total_outstanding numeric NOT NULL,
  principal_outstanding numeric,
  interest_outstanding numeric,
  penalty_outstanding numeric,
  other_charges numeric,
  days_past_due integer NOT NULL,
  last_payment_date date,
  last_payment_amount numeric,
  case_status character varying CHECK (case_status::text = ANY (ARRAY['ACTIVE'::character varying::text, 'RESOLVED'::character varying::text, 'LEGAL'::character varying::text, 'WRITTEN_OFF'::character varying::text, 'SETTLED'::character varying::text, 'CLOSED'::character varying::text])),
  assigned_to character varying,
  assignment_date date,
  priority character varying CHECK (priority::text = ANY (ARRAY['LOW'::character varying::text, 'MEDIUM'::character varying::text, 'HIGH'::character varying::text, 'CRITICAL'::character varying::text])),
  branch_id character varying,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  total_amount bigint,
  CONSTRAINT collection_cases_pkey PRIMARY KEY (case_id),
  CONSTRAINT collection_cases_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES kastle_banking.customers(customer_id),
  CONSTRAINT collection_cases_bucket_id_fkey FOREIGN KEY (bucket_id) REFERENCES kastle_banking.collection_buckets(bucket_id),
  CONSTRAINT collection_cases_branch_id_fkey FOREIGN KEY (branch_id) REFERENCES kastle_banking.branches(branch_id)
);
CREATE TABLE kastle_banking.collection_rates (
  id integer NOT NULL DEFAULT nextval('kastle_banking.collection_rates_id_seq'::regclass),
  period_type character varying NOT NULL,
  period_date date NOT NULL,
  total_delinquent_amount numeric NOT NULL,
  total_collected_amount numeric NOT NULL,
  collection_rate numeric NOT NULL,
  number_of_accounts integer NOT NULL,
  number_of_accounts_collected integer NOT NULL,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT collection_rates_pkey PRIMARY KEY (id)
);
CREATE TABLE kastle_banking.countries (
  country_code character varying NOT NULL,
  country_name character varying NOT NULL,
  iso_code character varying,
  currency_code character varying,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT countries_pkey PRIMARY KEY (country_code)
);
CREATE TABLE kastle_banking.currencies (
  currency_code character varying NOT NULL,
  currency_name character varying NOT NULL,
  currency_symbol character varying,
  decimal_places integer DEFAULT 2,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT currencies_pkey PRIMARY KEY (currency_code)
);
CREATE TABLE kastle_banking.customer_addresses (
  address_id integer NOT NULL DEFAULT nextval('kastle_banking.customer_addresses_address_id_seq'::regclass),
  customer_id character varying,
  address_type character varying CHECK (address_type::text = ANY (ARRAY['PERMANENT'::character varying::text, 'CORRESPONDENCE'::character varying::text, 'OFFICE'::character varying::text, 'TEMPORARY'::character varying::text])),
  address_line1 character varying NOT NULL,
  address_line2 character varying,
  city character varying NOT NULL,
  state character varying,
  country_code character varying,
  postal_code character varying,
  is_primary boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT customer_addresses_pkey PRIMARY KEY (address_id),
  CONSTRAINT customer_addresses_country_code_fkey FOREIGN KEY (country_code) REFERENCES kastle_banking.countries(country_code),
  CONSTRAINT customer_addresses_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES kastle_banking.customers(customer_id)
);
CREATE TABLE kastle_banking.customer_contacts (
  contact_id integer NOT NULL DEFAULT nextval('kastle_banking.customer_contacts_contact_id_seq'::regclass),
  customer_id character varying,
  contact_type character varying CHECK (contact_type::text = ANY (ARRAY['MOBILE'::character varying::text, 'HOME'::character varying::text, 'WORK'::character varying::text, 'EMAIL'::character varying::text, 'FAX'::character varying::text])),
  contact_value character varying NOT NULL,
  is_primary boolean DEFAULT false,
  is_verified boolean DEFAULT false,
  verified_date timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT customer_contacts_pkey PRIMARY KEY (contact_id),
  CONSTRAINT customer_contacts_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES kastle_banking.customers(customer_id)
);
CREATE TABLE kastle_banking.customer_documents (
  document_id integer NOT NULL DEFAULT nextval('kastle_banking.customer_documents_document_id_seq'::regclass),
  customer_id character varying,
  document_type character varying NOT NULL,
  document_number character varying,
  issuing_authority character varying,
  issue_date date,
  expiry_date date,
  document_path character varying,
  document_url text,
  bucket_name character varying DEFAULT 'customer-documents'::character varying,
  verification_status character varying DEFAULT 'PENDING'::character varying,
  verified_by character varying,
  verified_date timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT customer_documents_pkey PRIMARY KEY (document_id),
  CONSTRAINT customer_documents_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES kastle_banking.customers(customer_id)
);
CREATE TABLE kastle_banking.customer_types (
  type_id integer NOT NULL DEFAULT nextval('kastle_banking.customer_types_type_id_seq'::regclass),
  type_code character varying NOT NULL UNIQUE,
  type_name character varying NOT NULL,
  description text,
  CONSTRAINT customer_types_pkey PRIMARY KEY (type_id)
);
CREATE TABLE kastle_banking.customers (
  customer_id character varying NOT NULL,
  auth_user_id uuid,
  customer_type_id integer,
  first_name character varying NOT NULL,
  middle_name character varying,
  last_name character varying NOT NULL,
  full_name character varying,
  gender character varying CHECK (gender::text = ANY (ARRAY['MALE'::character varying::text, 'FEMALE'::character varying::text, 'OTHER'::character varying::text])),
  date_of_birth date,
  nationality character varying,
  marital_status character varying CHECK (marital_status::text = ANY (ARRAY['SINGLE'::character varying::text, 'MARRIED'::character varying::text, 'DIVORCED'::character varying::text, 'WIDOWED'::character varying::text])),
  education_level character varying,
  occupation character varying,
  annual_income numeric,
  income_source character varying,
  tax_id character varying,
  employer_name character varying,
  employment_type character varying,
  preferred_language character varying DEFAULT 'ENGLISH'::character varying,
  segment character varying CHECK (segment::text = ANY (ARRAY['RETAIL'::character varying::text, 'PREMIUM'::character varying::text, 'HNI'::character varying::text, 'CORPORATE'::character varying::text, 'SME'::character varying::text])),
  relationship_manager character varying,
  onboarding_branch character varying,
  onboarding_date date DEFAULT CURRENT_DATE,
  kyc_status character varying DEFAULT 'PENDING'::character varying,
  risk_category character varying CHECK (risk_category::text = ANY (ARRAY['LOW'::character varying::text, 'MEDIUM'::character varying::text, 'HIGH'::character varying::text, 'VERY_HIGH'::character varying::text])),
  is_active boolean DEFAULT true,
  is_pep boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT customers_pkey PRIMARY KEY (customer_id),
  CONSTRAINT customers_auth_user_id_fkey FOREIGN KEY (auth_user_id) REFERENCES auth.users(id),
  CONSTRAINT customers_onboarding_branch_fkey FOREIGN KEY (onboarding_branch) REFERENCES kastle_banking.branches(branch_id)
);
CREATE TABLE kastle_banking.delinquencies (
  id integer NOT NULL DEFAULT nextval('kastle_banking.delinquencies_id_seq'::regclass),
  loan_account_id integer,
  customer_id character varying,
  outstanding_amount numeric NOT NULL,
  days_past_due integer NOT NULL,
  aging_bucket_id integer,
  last_payment_date date,
  last_payment_amount numeric,
  next_due_date date,
  collection_status character varying,
  risk_rating character varying,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT delinquencies_pkey PRIMARY KEY (id),
  CONSTRAINT delinquencies_aging_bucket_id_fkey FOREIGN KEY (aging_bucket_id) REFERENCES kastle_banking.aging_buckets(id),
  CONSTRAINT delinquencies_loan_account_id_fkey FOREIGN KEY (loan_account_id) REFERENCES kastle_banking.loan_accounts(loan_account_id),
  CONSTRAINT delinquencies_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES kastle_banking.customers(customer_id)
);
CREATE TABLE kastle_banking.delinquency_history (
  id integer NOT NULL DEFAULT nextval('kastle_banking.delinquency_history_id_seq'::regclass),
  delinquency_id integer,
  snapshot_date date NOT NULL,
  outstanding_amount numeric NOT NULL,
  days_past_due integer NOT NULL,
  aging_bucket_id integer,
  collection_status character varying,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT delinquency_history_pkey PRIMARY KEY (id),
  CONSTRAINT delinquency_history_delinquency_id_fkey FOREIGN KEY (delinquency_id) REFERENCES kastle_banking.delinquencies(id),
  CONSTRAINT delinquency_history_aging_bucket_id_fkey FOREIGN KEY (aging_bucket_id) REFERENCES kastle_banking.aging_buckets(id)
);
CREATE TABLE kastle_banking.loan_accounts (
  loan_account_id integer NOT NULL DEFAULT nextval('kastle_banking.loan_accounts_loan_account_id_seq'::regclass),
  loan_account_number character varying NOT NULL UNIQUE,
  application_id integer,
  customer_id character varying,
  product_id integer,
  principal_amount numeric NOT NULL,
  interest_rate numeric NOT NULL,
  tenure_months integer NOT NULL,
  emi_amount numeric,
  disbursement_date date,
  first_emi_date date,
  maturity_date date,
  outstanding_principal numeric,
  outstanding_interest numeric,
  total_interest_paid numeric DEFAULT 0,
  total_principal_paid numeric DEFAULT 0,
  overdue_amount numeric DEFAULT 0,
  overdue_days integer DEFAULT 0,
  loan_status character varying CHECK (loan_status::text = ANY (ARRAY['ACTIVE'::character varying::text, 'CLOSED'::character varying::text, 'NPA'::character varying::text, 'WRITTEN_OFF'::character varying::text, 'RESTRUCTURED'::character varying::text, 'FORECLOSED'::character varying::text])),
  npa_date date,
  settlement_amount numeric,
  settlement_date date,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  outstanding_balance bigint,
  CONSTRAINT loan_accounts_pkey PRIMARY KEY (loan_account_id),
  CONSTRAINT loan_accounts_application_id_fkey FOREIGN KEY (application_id) REFERENCES kastle_banking.loan_applications(application_id),
  CONSTRAINT loan_accounts_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES kastle_banking.customers(customer_id),
  CONSTRAINT loan_accounts_product_id_fkey FOREIGN KEY (product_id) REFERENCES kastle_banking.products(product_id)
);
CREATE TABLE kastle_banking.loan_applications (
  application_id integer NOT NULL DEFAULT nextval('kastle_banking.loan_applications_application_id_seq'::regclass),
  application_number character varying NOT NULL DEFAULT ((('LOAN'::text || to_char(now(), 'YYYYMMDD'::text)) || '_'::text) || substr(md5((random())::text), 1, 8)) UNIQUE,
  customer_id character varying,
  product_id integer,
  requested_amount numeric NOT NULL,
  approved_amount numeric,
  tenure_months integer NOT NULL,
  interest_rate numeric,
  purpose character varying,
  collateral_details jsonb,
  guarantor_details jsonb,
  application_date date DEFAULT CURRENT_DATE,
  application_status character varying CHECK (application_status::text = ANY (ARRAY['DRAFT'::character varying::text, 'SUBMITTED'::character varying::text, 'UNDER_REVIEW'::character varying::text, 'APPROVED'::character varying::text, 'REJECTED'::character varying::text, 'DISBURSED'::character varying::text, 'CANCELLED'::character varying::text])),
  rejection_reason text,
  credit_score integer,
  risk_rating character varying,
  processing_fee numeric,
  insurance_premium numeric,
  branch_id character varying,
  relationship_officer character varying,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT loan_applications_pkey PRIMARY KEY (application_id),
  CONSTRAINT loan_applications_product_id_fkey FOREIGN KEY (product_id) REFERENCES kastle_banking.products(product_id),
  CONSTRAINT loan_applications_branch_id_fkey FOREIGN KEY (branch_id) REFERENCES kastle_banking.branches(branch_id),
  CONSTRAINT loan_applications_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES kastle_banking.customers(customer_id)
);
CREATE TABLE kastle_banking.portfolio_summary (
  id integer NOT NULL DEFAULT nextval('kastle_banking.portfolio_summary_id_seq'::regclass),
  snapshot_date date NOT NULL,
  total_portfolio_value numeric NOT NULL,
  total_delinquent_value numeric NOT NULL,
  delinquency_rate numeric NOT NULL,
  total_loans integer NOT NULL,
  delinquent_loans integer NOT NULL,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT portfolio_summary_pkey PRIMARY KEY (id)
);
CREATE TABLE kastle_banking.product_categories (
  category_id integer NOT NULL DEFAULT nextval('kastle_banking.product_categories_category_id_seq'::regclass),
  category_code character varying NOT NULL UNIQUE,
  category_name character varying NOT NULL,
  category_type character varying CHECK (category_type::text = ANY (ARRAY['DEPOSIT'::character varying::text, 'LOAN'::character varying::text, 'CARD'::character varying::text, 'INVESTMENT'::character varying::text, 'INSURANCE'::character varying::text])),
  description text,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT product_categories_pkey PRIMARY KEY (category_id)
);
CREATE TABLE kastle_banking.products (
  product_id integer NOT NULL DEFAULT nextval('kastle_banking.products_product_id_seq'::regclass),
  product_code character varying NOT NULL UNIQUE,
  product_name character varying NOT NULL,
  category_id integer,
  product_type character varying,
  min_balance numeric DEFAULT 0,
  max_balance numeric,
  interest_rate numeric,
  tenure_months integer,
  features jsonb,
  eligibility_criteria jsonb,
  documents_required jsonb,
  is_active boolean DEFAULT true,
  launch_date date,
  end_date date,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT products_pkey PRIMARY KEY (product_id)
);
CREATE TABLE kastle_banking.realtime_notifications (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  customer_id character varying,
  notification_type character varying,
  title character varying,
  message text,
  data jsonb,
  is_read boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT realtime_notifications_pkey PRIMARY KEY (id),
  CONSTRAINT realtime_notifications_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES kastle_banking.customers(customer_id)
);
CREATE TABLE kastle_banking.transaction_types (
  type_id integer NOT NULL DEFAULT nextval('kastle_banking.transaction_types_type_id_seq'::regclass),
  type_code character varying NOT NULL UNIQUE,
  type_name character varying NOT NULL,
  transaction_category character varying CHECK (transaction_category::text = ANY (ARRAY['DEBIT'::character varying::text, 'CREDIT'::character varying::text, 'TRANSFER'::character varying::text, 'CHARGE'::character varying::text, 'INTEREST'::character varying::text, 'REVERSAL'::character varying::text])),
  affects_balance boolean DEFAULT true,
  requires_approval boolean DEFAULT false,
  min_amount numeric,
  max_amount numeric,
  charge_applicable boolean DEFAULT false,
  CONSTRAINT transaction_types_pkey PRIMARY KEY (type_id)
);
CREATE TABLE kastle_banking.transactions (
  transaction_id bigint NOT NULL DEFAULT nextval('kastle_banking.transactions_transaction_id_seq'::regclass),
  transaction_ref character varying NOT NULL DEFAULT ((('TRN'::text || to_char(now(), 'YYYYMMDD'::text)) || '_'::text) || substr(md5((random())::text), 1, 8)) UNIQUE,
  transaction_date timestamp with time zone DEFAULT now(),
  value_date date DEFAULT CURRENT_DATE,
  account_number character varying,
  transaction_type_id integer,
  debit_credit character varying CHECK (debit_credit::text = ANY (ARRAY['DEBIT'::character varying::text, 'CREDIT'::character varying::text])),
  transaction_amount numeric NOT NULL,
  currency_code character varying,
  running_balance numeric,
  contra_account character varying,
  channel character varying CHECK (channel::text = ANY (ARRAY['BRANCH'::character varying::text, 'ATM'::character varying::text, 'INTERNET'::character varying::text, 'MOBILE'::character varying::text, 'POS'::character varying::text, 'CHEQUE'::character varying::text, 'STANDING_ORDER'::character varying::text])),
  reference_number character varying,
  cheque_number character varying,
  narration text,
  beneficiary_name character varying,
  beneficiary_account character varying,
  beneficiary_bank character varying,
  status character varying CHECK (status::text = ANY (ARRAY['PENDING'::character varying::text, 'COMPLETED'::character varying::text, 'FAILED'::character varying::text, 'REVERSED'::character varying::text, 'CANCELLED'::character varying::text])),
  approval_status character varying,
  approved_by character varying,
  reversal_ref character varying,
  branch_id character varying,
  teller_id character varying,
  device_id character varying,
  ip_address character varying,
  created_at timestamp with time zone DEFAULT now(),
  posted_at timestamp with time zone,
  CONSTRAINT transactions_pkey PRIMARY KEY (transaction_id),
  CONSTRAINT transactions_account_number_fkey FOREIGN KEY (account_number) REFERENCES kastle_banking.accounts(account_number),
  CONSTRAINT transactions_branch_id_fkey FOREIGN KEY (branch_id) REFERENCES kastle_banking.branches(branch_id),
  CONSTRAINT transactions_currency_code_fkey FOREIGN KEY (currency_code) REFERENCES kastle_banking.currencies(currency_code),
  CONSTRAINT transactions_transaction_type_id_fkey FOREIGN KEY (transaction_type_id) REFERENCES kastle_banking.transaction_types(type_id)
);